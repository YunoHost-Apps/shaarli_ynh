#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed || [ "$upgrade_type" == "UPGRADE_FORCED" ] # we should do that during a force upgrade too (as it could lead to a version upgrade for instance)
then
	ynh_script_progression "Upgrading source files..."

	# Create a temporary directory
	#tmpdir="$(mktemp -d)"

	# Backup the config file in the temp dir
	#cp -a "$install_dir/data" "$tmpdir/data"
	#cp -a "$install_dir/tpl" "$tmpdir/tpl"

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep="data tpl"

	#cp -a "$tmpdir/data" "$install_dir/"
	#cp -a -n "$tmpdir/tpl" "$install_dir/" # copy without erasing existing templates (from official source)

	# Remove the tmp directory securely
	#ynh_safe_rm "$tmpdir"
fi

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
chmod -R u+rwX $install_dir/{cache/,data/,pagecache/,tmp/}
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
##REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 700 "$install_dir/data/config.json.php"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

# Create a dedicated NGINX config
ynh_config_add_nginx

# Use logrotate to manage app-specific logfile(s)
# Temporary fix for .txt log file and ynh_config_add_logrotate
if [ -d "$install_dir/data/log.txt" ]
then
	ynh_safe_rm "$install_dir/data/log.txt"
	touch "$install_dir/data/log.txt"
fi
chown $app:www-data "$install_dir/data/log.txt"

ynh_config_add_logrotate "$install_dir/data/log.txt"

# Create a dedicated Fail2Ban config
ynh_config_add_fail2ban --logpath="$install_dir/data/log.txt" --failregex="\s-\s<HOST>\s-\sLogin failed for user.*$"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
